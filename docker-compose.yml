version: "3.7"

services:
  postgres:
    image: postgres:14
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transactions_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:7.0
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app_network
    command: redis-server --appendonly yes

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - "9092:9092"
    networks:
      - app_network

  transaction-service:
    build: ./transaction-service
    container_name: transaction-service
    ports:
      - "3000:3000"
    env_file:
      - ./transaction-service/.env
    environment:
      - ENABLE_SWAGGER=true
    depends_on:
      - postgres
      - kafka
      - redis
    networks:
      - app_network
    command: sh -c "npm install && npm run test && npm start && echo 'Swagger disponible en http://localhost:3000/api/docs'"

  antifraud-service:
    build: ./antifraud-service
    container_name: antifraud-service
    env_file:
      - ./antifraud-service/.env
    depends_on:
      - kafka
    networks:
      - app_network
    command: sh -c "npm install && npm run test && npm start"

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
